import React from "react";
import { makeStyles} from "@material-ui/core/styles";
import { Link } from "react-router-dom";
import { TextField } from "@mui/material";

const useStyles = makeStyles({
  form: {
    display: "grid",
    // gridTemplateColumns: "500px 500px",
    gridTemplateColumns: "1fr 1fr",
    gap: "50px",
    // backgroundColor: "skyblue",
    padding: "50px 100px",
  },
  formGroup: {
    gap: "10px",
    // backgroundColor: "skyblue",
    padding: "10px",
  },
  errorMessage: {
    Color: "red",
    padding: "10px",
  },
});

const designations = [
  {
    value: "Trainee Software Engineer",
    label: "Trainee Software Engineer",
  },
  {
    value: "Software Engineer",
    label: "Software Engineer",
  },
  {
    value: "Senior Software Engineer",
    label: "Senior Software Engineer",
  },
];

const submitData = () =>{

}

const AddEmployee: React.FC = () => {
    const [designation, setDesignation] = React.useState("Software Engineer");
  const classes = useStyles();

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setDesignation(event.target.value);
  };

  return (
    <React.Fragment>
        <h1>Add Employee</h1>
      <form>
        <Link to={`/`}>
          <button>Back</button>
        </Link>
        <div className={classes.form}>
          <div className={classes.formGroup}>
            <TextField
              required
              id="employeeID"
              label="Employee ID"
              type="number"
              inputProps={{ pattern: "[0-9]*" }}
            />

            {/* <label className="form-label">Employee ID: </label>
            <input
              type="number"
              className="form-input"
              placeholder="Employee ID"
              minLength={1}
              maxLength={100}
              pattern="^[0-9]"
              required
            /> */}
            {/* <p className={classes.errorMessage}>Error message</p> */}
          </div>
          <div className={classes.formGroup}>
            <TextField
              required
              id="firstName"
              label="First Name"
              variant="outlined"
              inputProps={{
                inputMode: "text",
                pattern: "([A-Za-z]+[,.]?[ ]?|[A-Za-z]+['-]?)+",
              }}
            />
            {/* <label className="form-label">First Name: </label> */}
            {/* <input
              type="text"
              className="form-input"
              placeholder="First Name"
              minLength={1}
              maxLength={100}
              pattern="([A-Za-z]+[,.]?[ ]?|[A-Za-z]+['-]?)+"
              required
            /> */}
            {/* <p className={classes.errorMessage}>Error message</p> */}
          </div>
          <div className={classes.formGroup}>
            <TextField
              required
              id="lastName"
              label="Last Name"
              variant="outlined"
              inputProps={{
                inputMode: "text",
                pattern: "([A-Za-z]+[,.]?[ ]?|[A-Za-z]+['-]?)+",
              }}
            />
            {/* <label className="form-label">Last Name: </label>
            <input
              type="text"
              className="form-input"
              placeholder="Last Name"
              minLength={1}
              maxLength={100}
              pattern="([A-Za-z]+[,.]?[ ]?|[A-Za-z]+['-]?)+"
              required
            /> */}
            {/* <p className={classes.errorMessage}>Error message</p> */}
          </div>
          <div className={classes.formGroup}>
            <TextField
              required
              id="company"
              label="Company"
              variant="outlined"
              inputProps={{
                inputMode: "text",
                pattern: "([A-Za-z]+[,.]?[ ]?|[A-Za-z]+['-]?)+",
              }}
            />
            {/* <label className="form-label">Company: </label>
            <input
              type="text"
              className="form-input"
              placeholder="Company"
              minLength={1}
              maxLength={100}
              pattern="([A-Za-z]+[,.]?[ ]?|[A-Za-z]+['-]?)+"
              required
            /> */}
            {/* <p className={classes.errorMessage}>Error message</p> */}
          </div>
          <div className={classes.formGroup}>
            <TextField
              id="designation"
              select
              label="Designation"
              value={designation}
              onChange={handleChange}
              SelectProps={{
                native: true,
              }}
              helperText="Please select designation"
            >
              {designations.map((option) => (
                <option key={option.value} value={option.value}>
                  {option.label}
                </option>
              ))}
            </TextField>
            {/* <label className="form-label">Designation: </label>
            <input
              required
              type="text"
              className="form-input"
              placeholder="Designation"
              minLength={1}
              maxLength={100}
              pattern="([A-Za-z]+[,.]?[ ]?|[A-Za-z]+['-]?)+"
            /> */}
            {/* <p className={classes.errorMessage}>Error message</p> */}
          </div>
          <div className={classes.formGroup}>
            <TextField
              required
              id="email"
              label="Email"
              variant="outlined"
              inputProps={{
                inputMode: "email",
                pattern: "[^ ]+@[^ ]+.[a-z]{2,3}",
              }}
            />
            {/* <label className="form-label">Email: </label>
            <input
              type="email"
              className="form-input"
              placeholder="Email"
              maxLength={300}
              pattern="[^ ]+@[^ ]+\.[a-z]{2,3}"
              required
            /> */}
            {/* <p className={classes.errorMessage}>Error message</p> */}
          </div>
        </div>
        <button type="submit" id="submit" onClick={submitData} value="SEND">Submit</button>
      </form>
    </React.Fragment>
  );
};

export default AddEmployee;
